<ApiTests xmlns="http://labkey.org/query/xml">
    <test name="Rlabkey version check" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)
                print("Latest Rlabkey version: 2.1.124")
                print(paste("Found Rlabkey version:", installed.packages()["Rlabkey","Version"]))
            ]]>
        </url>
        <response>
            <![CDATA[
                [1] "Latest Rlabkey version: 2.1.124"
                [1] "Found Rlabkey version: 2.1.124"
            ]]>
        </response>
    </test>
    <test name="list schemas" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)
                s<-getSession(baseUrl="%baseUrl%", folderPath="/RlabkeyVerifyProject")
                scobj <- getSchema(s, "lists")
                scobj   # shows available queries
            ]]>
        </url>
        <response>
            <![CDATA[
                Available queries:
                AllTypesCategories
                AllTypes
                AllTypesComments
                AllTypesCategoryGroups
            ]]>
        </response>
    </test>
    <test name="get rows" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)
                s<-getSession(baseUrl="%baseUrl%", folderPath="/RlabkeyVerifyProject")
                scobj <- getSchema(s, "lists")
                lkdata<- getRows(s, scobj$AllTypes)  # shorthand for labkey.selectRows, all the same args apply
                lkdata
            ]]>
        </url>
        <response>
            <![CDATA[
                DisplayFld TextFld IntFld DoubleFld DateTimeFld
                Row 2 Empty Vals
                Inserted from R how its done 98 12.345 2010-03-01
                The quick brown fox jumped over the fence.
                AttachmentFld RequiredText RequiredInt Category
                lots of words for empty 456 EMPTY
                Veni, vidi, vici 0 LOOKUP2
            ]]>
        </response>
    </test>
    <test name="get lookups" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)
                s<-getSession(baseUrl="%baseUrl%", folderPath="/RlabkeyVerifyProject")
                scobj <- getSchema(s, "lists")
                lucols <- getLookups(s, scobj$AllTypes$Category)  # can add fields from related queries
                lucols
            ]]>
        </url>
        <response>
            <![CDATA[
                fieldName caption type key
                Category/TextKey Text Key Text (String)
                Category/Category Category Text (String)
                Category/CategorySort Sort Ordinal Number (Double)
                Category/Group Category Group Text (String)
                Category/EntityId Entity Id Text (String)
                lookup to lists.AllTypesCategoryGroups
            ]]>
        </response>
    </test>
    <test name="get rows with options" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)
                s<-getSession(baseUrl="%baseUrl%", folderPath="/RlabkeyVerifyProject")
                scobj <- getSchema(s, "lists")
                lucols <- getLookups(s, scobj$AllTypes$Category)  # can add fields from related queries
                cols <- c(names(scobj$AllTypes)[2:6], names(lucols)[8:10])
                simpledf <- getRows(s, scobj$AllTypes, colSelect=paste(cols, sep=","), colNameOpt="caption")
                simpledf
            ]]>
        </url>
        <response>
            <![CDATA[
                Text Field Integer Field Double Field DateTime Field Boolean Field                
                some text here 99 987.654 2010-02-14 FALSE
                More plane values -34 98123.450 1999-01-01 FALSE
                null NULL NA and na 123 44.330 2002-02-20 FALSE
                how its done 98 12.345 2010-03-01 FALSE
                Category Sort Ordinal Category Group
                Basic functional test 1
                Empty Values Test 4
                2nd level lookup 3
                1 Punctuation
                4 TypeRange
                2nd level lookup 3 BasicTest
            ]]>
        </response>
    </test>
    <test name="get folders" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)
                lsFolders(getSession(baseUrl="%baseUrl%", "/RlabkeyVerifyProject"))
            ]]>
        </url>
        <response>
            <![CDATA[
                "/RlabkeyVerifyProject"
                "/RlabkeyVerifyProject/RlabkeyTest"
            ]]>
        </response>
    </test>
    <test name="insert row" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)

                ## insert, update and delete functions
                newrow <- data.frame(
                    DisplayFld="Inserted via Rlabkey"
                    , TextFld="how its done"
                    , IntFld= ""
                    , DoubleFld = 12.345
                    , DateTimeFld = "03/01/2010"
                    , BooleanFld= FALSE
                    , LongTextFld = "Four score and seven years ago"
                    , RequiredText = "I"
                    , RequiredInt = 0
                    , Category = "LOOKUP2")

                insertedRow <- labkey.insertRows("%baseUrl%", folderPath="/RlabkeyVerifyProject",schemaName="lists", queryName="AllTypes", toInsert=newrow)
                selectedRow<-labkey.selectRows("%baseUrl%", folderPath="/RlabkeyVerifyProject",schemaName="lists", queryName="AllTypes"
                        , colFilter=makeFilter(c("DisplayFld", "EQUALS", "Inserted via Rlabkey")))
                selectedRow
            ]]>
        </url>
        <response>
            <![CDATA[
                DisplayName Text Field Integer Field Double Field DateTime Field
                Inserted via Rlabkey how its done NA 12.345 2010-03-01
                Boolean Field Long Text Field Attachment Required Text
                FALSE Four score and seven years ago
                Required Integer Category Lookup
                1 0 LOOKUP2
            ]]>
        </response>
    </test>
    <test name="update row" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)

                selectedRow<-labkey.selectRows("%baseUrl%", folderPath="/RlabkeyVerifyProject",schemaName="lists", queryName="AllTypes"
                        ,showHidden=TRUE, colFilter=makeFilter(c("DisplayFld", "EQUALS", "Inserted via Rlabkey")))
                updaterow=data.frame(
                    RowId=selectedRow[1, "Row Id"]
                    , DisplayFld="Updated via Rlabkey"
                    , TextFld="how to update"
                    , IntFld= 777)

                updatedRow <- labkey.updateRows("%baseUrl%", folderPath="/RlabkeyVerifyProject",schemaName="lists", queryName="AllTypes", toUpdate=updaterow)
                selectedRow<-labkey.selectRows("%baseUrl%", folderPath="/RlabkeyVerifyProject",schemaName="lists", queryName="AllTypes"
                        , colFilter=makeFilter(c("DisplayFld", "EQUALS", "Updated via Rlabkey")))
                selectedRow
            ]]>
        </url>
        <response>
            <![CDATA[
                Updated via Rlabkey
            ]]>
        </response>
    </test>
    <test name="delete row" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)

                selectedRow<-labkey.selectRows("%baseUrl%", folderPath="/RlabkeyVerifyProject",schemaName="lists", queryName="AllTypes"
                        ,showHidden=TRUE, colFilter=makeFilter(c("DisplayFld", "EQUALS", "Updated via Rlabkey")))
                selectedRow[1,"Row Id"]

                deleterow <- data.frame(RowId=selectedRow[1, "Row Id"])
                labkey.deleteRows(baseUrl="%baseUrl%", folderPath="/RlabkeyVerifyProject", schemaName="lists", queryName="AllTypes",  toDelete=deleterow)

                selectedRow<-labkey.selectRows("%baseUrl%", folderPath="/RlabkeyVerifyProject",schemaName="lists", queryName="AllTypes"
                        ,showHidden=TRUE, colFilter=makeFilter(c("DisplayFld", "EQUALS", "Updated via Rlabkey")))            
            ]]>
        </url>
        <response>
            <![CDATA[
                Empty data frame was returned. Query may be too restrictive.
            ]]>
        </response>
    </test>
    <test name="insert and select with plus sign" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)

                ## insert row with text containing plus sign
                newrow <- data.frame(
                    DisplayFld="Inserted with plus (+) sign"
                    , RequiredText = "Required"
                    , RequiredInt = 0
                    , stringsAsFactors=FALSE)

                insertedRow <- labkey.insertRows("%baseUrl%", folderPath="/RlabkeyVerifyProject",schemaName="lists", queryName="AllTypes", toInsert=newrow)

                ## reselect inserted row
                selectedRow<-labkey.selectRows("%baseUrl%", folderPath="/RlabkeyVerifyProject",schemaName="lists", queryName="AllTypes"
                    , colFilter=makeFilter(c("DisplayFld", "EQUALS", "Inserted with plus (+) sign")))
                selectedRow
            ]]>
        </url>
        <response>
            <![CDATA[
                DisplayName Text Field Integer Field Double Field
                Inserted with plus (+) sign <NA> NA NA
                DateTime Field Boolean Field Long Text Field Attachment Required Text
                <NA> NA <NA> <NA> Required
                Required Integer Category Lookup
                0 <NA>
            ]]>            
        </response>
    </test>
    <test name="executeSql" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)

                selectedRow<-labkey.executeSql("%baseUrl%", folderPath="/RlabkeyVerifyProject",schemaName="lists",
                    sql="select DisplayFld, TextFld from AllTypes where DisplayFld = 'Row 1'")
                selectedRow
            ]]>
        </url>
        <response>
            <![CDATA[
                DisplayName Text Field
                1 Row 1 some text here
            ]]>
        </response>
    </test>
    <test name="ContainerFilter1" type="post">
            <url>
                <![CDATA[
                library(Rlabkey)

                selectedRow<-labkey.selectRows("%baseUrl%", folderPath="/RlabkeyVerifyProject",
                    schemaName="issues", queryName="Issues", containerFilter="Current")
                selectedRow
                ]]>
            </url>
            <response>
                <![CDATA[
                 Type Area Title Assigned To Pri Status
                1 <NA> <NA> Rlabkey: Issue at the Project level 0 3 open
                 Milestone
                1 <NA>
                ]]>
            </response>
        </test>
    <test name="ContainerFilter2" type="post">
             <url>
                 <![CDATA[
                     library(Rlabkey)
                 selectedRow<-labkey.selectRows("%baseUrl%", folderPath="/RlabkeyVerifyProject",
                     schemaName="issues", queryName="Issues", containerFilter="CurrentAndSubfolders", colSort="+IssueId")
                 selectedRow
                 ]]>
             </url>
             <response>
                 <![CDATA[
                  Type Area Title Assigned To Pri Status
                 1 <NA> <NA> Rlabkey: Issue at the Project level 0 3 open
                 2 <NA> <NA> Rlabkey: Issue in the subfolder 0 3 open
                  Milestone
                 1 <NA>
                 2 <NA>
                 ]]>
             </response>
         </test>
    <test name="ContainerFilter3" type="post">
            <url>
                <![CDATA[
                library(Rlabkey)

                selectedRow<-labkey.selectRows("%baseUrl%", folderPath="/RlabkeyVerifyProject/RlabkeyTest",
                    schemaName="issues", queryName="Issues", containerFilter="Current")
                selectedRow
                ]]>
            </url>
            <response>
                <![CDATA[
                 Type Area Title Assigned To Pri Status
                1 <NA> <NA> Rlabkey: Issue in the subfolder 0 3 open
                 Milestone
                1 <NA>
                ]]>
            </response>
        </test>
    <test name="ContainerFilter4" type="post">
             <url>
                 <![CDATA[
                     library(Rlabkey)
                 selectedRow<-labkey.selectRows("%baseUrl%", folderPath="/RlabkeyVerifyProject/RlabkeyTest",
                     schemaName="issues", queryName="Issues", containerFilter="CurrentAndParents", colSort="+IssueId")
                 selectedRow
                 ]]>
             </url>
             <response>
                 <![CDATA[
                  Type Area Title Assigned To Pri Status
                 1 <NA> <NA> Rlabkey: Issue at the Project level 0 3 open
                 2 <NA> <NA> Rlabkey: Issue in the subfolder 0 3 open
                  Milestone
                 1 <NA>
                 2 <NA>
                 ]]>
             </response>
         </test>
    <test name="ContainerFilter5" type="post">
             <url>
                 <![CDATA[
                     library(Rlabkey)
                 selectedRow<-labkey.selectRows("%baseUrl%", folderPath="/RlabkeyVerifyProject/RlabkeyTest",
                     schemaName="issues", queryName="Issues", containerFilter="CurrentPlusProject", colSort="+IssueId")
                 selectedRow
                 ]]>
             </url>
             <response>
                 <![CDATA[
                  Type Area Title Assigned To Pri Status
                 1 <NA> <NA> Rlabkey: Issue at the Project level 0 3 open
                 2 <NA> <NA> Rlabkey: Issue in the subfolder 0 3 open
                  Milestone
                 1 <NA>
                 2 <NA>
                 ]]>
             </response>
         </test>
    <test name="ContainerFilter6" type="post">
             <url>
                 <![CDATA[
                     library(Rlabkey)
                 selectedRow<-labkey.selectRows("%baseUrl%", folderPath="/RlabkeyVerifyProject",
                     schemaName="issues", queryName="Issues",
                     colFilter=makeFilter(c("Title", "STARTS_WITH", "Rlabkey:")),
                     colSort="Title",
                     containerFilter="AllFolders")
                 selectedRow
                 ]]>
             </url>
             <response>
                 <![CDATA[
                  Type Area Title Assigned To Pri Status
                 1 <NA> <NA> Rlabkey: Issue at the Project level 0 3 open
                 2 <NA> <NA> Rlabkey: Issue in another project 0 3 open
                 3 <NA> <NA> Rlabkey: Issue in the subfolder 0 3 open
                  Milestone
                 1 <NA>
                 2 <NA>
                 3 <NA>
                 ]]>
             </response>
         </test>
    <test name="import rows" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)

                # setup new rows data frame with 10,000 identical rows
                newrows <- data.frame(
	                DisplayFld="Imported from R"
	                , RequiredText="abc"
	                , RequiredInt=1
	                , stringsAsFactors=FALSE)
                newrows = newrows[rep(1:nrow(newrows),each=10000),]

                importedInfo <- labkey.importRows("%baseUrl%", folderPath="/RlabkeyVerifyProject",schemaName="lists", queryName="AllTypes", toImport=newrows)

                print(paste("Rows imported = ", importedInfo$rowsAffected, sep=""))
            ]]>
        </url>
        <response>
            <![CDATA[
                Rows imported = 10000
            ]]>
        </response>
    </test>
    <test name="final test" type="post">
        <url>
            <![CDATA[
                print("We are done!");
            ]]>
        </url>
        <response>
            <![CDATA[
                We are done!
            ]]>
        </response>
    </test>
</ApiTests>
