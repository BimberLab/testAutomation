<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
    <bean id="simpletestPipelineRegistry" class="org.labkey.api.pipeline.TaskPipelineRegistrar">
        <property name="pipelines">
            <list>
                <bean class="org.labkey.api.pipeline.file.FileAnalysisTaskPipelineSettings">
                    <constructor-arg value="dummyNlpPipeline"/>
                    <property name="description" value="Dummy NLP invocation"/>
                    <property name="protocolObjectId" value="nlp.dummyengineInvocation"/>
                    <property name="protocolName" value="Dummy NLP invocation"/>
                    <property name="protocolFactoryName" value="dummyNlpinvocation"/>
                    <property name="initialInputExt" ref="nlpTsvFileType"/>
                    <property name="workflowProcessKey" value="NLP:documentProcessingWithNLP"/>
                    <property name="taskProgressionSpec">
                        <list>
                            <ref bean="dummyNlpEngineCommand"/>
                            <ref bean="xarGeneratorId"/>
                        </list>
                    </property>
                </bean>
                <bean class="org.labkey.api.pipeline.file.FileAnalysisTaskPipelineSettings">
                    <constructor-arg value="dummy2NlpPipeline"/>
                    <property name="description" value="Dummy2 NLP invocation"/>
                    <property name="protocolObjectId" value="nlp.dummyengineInvocation"/>
                    <property name="protocolName" value="Dummy2 NLP invocation"/>
                    <property name="protocolFactoryName" value="dummyNlpinvocation"/>
                    <property name="initialInputExt" ref="nlpTsvFileType"/>
                    <property name="workflowProcessKey" value="NLP:documentProcessingWithNLP"/>
                    <property name="taskProgressionSpec">
                        <list>
                            <ref bean="dummy2NlpEngineCommand"/>
                            <ref bean="xarGeneratorId"/>
                        </list>
                    </property>
                </bean>
                <bean class="org.labkey.api.pipeline.file.FileAnalysisTaskPipelineSettings">
                    <constructor-arg value="dummy3NlpPipeline"/>
                    <property name="description" value="Dummy3 NLP invocation"/>
                    <property name="protocolObjectId" value="nlp.dummyengineInvocation"/>
                    <property name="protocolName" value="Dummy NLP3 invocation"/>
                    <property name="protocolFactoryName" value="dummyNlpinvocation"/>
                    <property name="initialInputExt" ref="nlpTsvFileType"/>
                    <property name="workflowProcessKey" value="NLP:documentProcessingWithNLP"/>
                    <property name="taskProgressionSpec">
                        <list>
                            <ref bean="dummy3NlpEngineCommand"/>
                            <ref bean="xarGeneratorId"/>
                        </list>
                    </property>
                </bean>
                <bean class="org.labkey.api.pipeline.file.FileAnalysisTaskPipelineSettings">
                    <constructor-arg value="dummy2aNlpPipeline"/>
                    <property name="description" value="Dummy2a NLP invocation"/>
                    <property name="protocolObjectId" value="nlp.dummyengineInvocation"/>
                    <property name="protocolName" value="Dummy2a NLP invocation"/>
                    <property name="protocolFactoryName" value="dummyNlpinvocation"/>
                    <property name="initialInputExt" ref="nlpTsvFileType"/>
                    <property name="workflowProcessKey" value="NLP:documentProcessingWithNLP"/>
                    <property name="taskProgressionSpec">
                        <list>
                            <ref bean="dummy2aNlpEngineCommand"/>
                            <ref bean="xarGeneratorId"/>
                        </list>
                    </property>
                </bean>
                <bean class="org.labkey.api.pipeline.file.FileAnalysisTaskPipelineSettings">
                    <constructor-arg value="dummy2bNlpPipeline"/>
                    <property name="description" value="Dummy2b NLP invocation"/>
                    <property name="protocolObjectId" value="nlp.dummyengineInvocation"/>
                    <property name="protocolName" value="Dummy NLP2b invocation"/>
                    <property name="protocolFactoryName" value="dummyNlpinvocation"/>
                    <property name="initialInputExt" ref="nlpTsvFileType"/>
                    <property name="workflowProcessKey" value="NLP:documentProcessingWithNLP"/>
                    <property name="taskProgressionSpec">
                        <list>
                            <ref bean="dummy2bNlpEngineCommand"/>
                            <ref bean="xarGeneratorId"/>
                        </list>
                    </property>
                </bean>
                <bean class="org.labkey.api.pipeline.file.FileAnalysisTaskPipelineSettings">
                    <constructor-arg value="dummyNlpPipelineNoResults"/>
                    <property name="description" value="Dummy NLP invocation No Results"/>
                    <property name="protocolObjectId" value="nlp.dummyengineInvocation"/>
                    <property name="protocolName" value="Dummy NLP invocation No Results"/>
                    <property name="protocolFactoryName" value="dummyNlpinvocationNoResults"/>
                    <property name="initialInputExt" ref="nlpTsvFileType"/>
                    <property name="workflowProcessKey" value="NLP:documentProcessingWithNLP"/>
                    <property name="taskProgressionSpec">
                        <list>
                            <ref bean="dummyNlpEngineCommandNoResults"/>
                            <ref bean="xarGeneratorId"/>
                        </list>
                    </property>
                </bean>
                <bean class="org.labkey.api.pipeline.file.FileAnalysisTaskPipelineSettings">
                    <constructor-arg value="dummyNlpPipelineCytogenetics"/>
                    <property name="description" value="Dummy NLP invocation Cytogenetics"/>
                    <property name="protocolObjectId" value="nlp.dummyengineInvocation"/>
                    <property name="protocolName" value="Dummy NLP invocation Cytogenetics"/>
                    <property name="protocolFactoryName" value="dummyNlpinvocationCytogenetics"/>
                    <property name="initialInputExt" ref="nlpTsvFileType"/>
                    <property name="workflowProcessKey" value="NLP:documentProcessingWithNLP"/>
                    <property name="taskProgressionSpec">
                        <list>
                            <ref bean="dummyNlpEngineCommandCytogenetics"/>
                            <ref bean="xarGeneratorId"/>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <!-- Tasks registered in experiment module -->
    <bean id="xarGeneratorId" class="org.labkey.api.pipeline.TaskId">
        <constructor-arg><value type="java.lang.Class">org.labkey.api.exp.pipeline.XarGeneratorId</value></constructor-arg>
    </bean>

    <bean id="dummyNlpEngineCommand" class="org.labkey.api.pipeline.cmd.CommandTaskFactorySettings">
        <constructor-arg value="dummyNlpEngine"/>
        <property name="statusName" value="RUN NLP ENGINE"/>
        <property name="inputPaths">
            <map>
                <entry key="sourceDocs">
                    <bean class="org.labkey.api.pipeline.cmd.TaskPath">
                        <constructor-arg ref="nlpTsvFileType"/>
                    </bean>
                </entry>
            </map>
        </property>
        <property name="outputPaths">
            <map>
                <entry key="output">
                    <bean class="org.labkey.api.pipeline.cmd.TaskPath">
                        <constructor-arg ref="nlpJsonFileType"/>
                    </bean>
                </entry>
            </map>
        </property>
        <property name="converters">
            <list>
                <bean class="org.labkey.api.pipeline.cmd.ExeToCommandArgs">
                    <property name="exePath" value="mv"/>
                </bean>
                <bean class="org.labkey.api.pipeline.cmd.RequiredInLine">
                    <property name="value" value="../../../uiTest.nlp.json"/>
                </bean>
                <bean class="org.labkey.api.pipeline.cmd.RequiredInLine">
                    <property name="value" value="."/>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="dummy2NlpEngineCommand" class="org.labkey.api.pipeline.cmd.CommandTaskFactorySettings">
        <constructor-arg value="dummy2NlpEngine"/>
        <property name="statusName" value="RUN NLP ENGINE"/>
        <property name="inputPaths">
            <map>
                <entry key="sourceDocs">
                    <bean class="org.labkey.api.pipeline.cmd.TaskPath">
                        <constructor-arg ref="nlpTsvFileType"/>
                    </bean>
                </entry>
            </map>
        </property>
        <property name="outputPaths">
            <map>
                <entry key="output">
                    <bean class="org.labkey.api.pipeline.cmd.TaskPath">
                        <constructor-arg ref="nlpJsonFileType"/>
                    </bean>
                </entry>
            </map>
        </property>
        <property name="converters">
            <list>
                <bean class="org.labkey.api.pipeline.cmd.ExeToCommandArgs">
                    <property name="exePath" value="mv"/>
                </bean>
                <bean class="org.labkey.api.pipeline.cmd.RequiredInLine">
                    <property name="value" value="../../../uiTest2.nlp.json"/>
                </bean>
                <bean class="org.labkey.api.pipeline.cmd.RequiredInLine">
                    <property name="value" value="."/>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="dummy3NlpEngineCommand" class="org.labkey.api.pipeline.cmd.CommandTaskFactorySettings">
        <constructor-arg value="dummy3NlpEngine"/>
        <property name="statusName" value="RUN NLP ENGINE"/>
        <property name="inputPaths">
            <map>
                <entry key="sourceDocs">
                    <bean class="org.labkey.api.pipeline.cmd.TaskPath">
                        <constructor-arg ref="nlpTsvFileType"/>
                    </bean>
                </entry>
            </map>
        </property>
        <property name="outputPaths">
            <map>
                <entry key="output">
                    <bean class="org.labkey.api.pipeline.cmd.TaskPath">
                        <constructor-arg ref="nlpJsonFileType"/>
                    </bean>
                </entry>
            </map>
        </property>
        <property name="converters">
            <list>
                <bean class="org.labkey.api.pipeline.cmd.ExeToCommandArgs">
                    <property name="exePath" value="mv"/>
                </bean>
                <bean class="org.labkey.api.pipeline.cmd.RequiredInLine">
                    <property name="value" value="../../../uiTest3.nlp.json"/>
                </bean>
                <bean class="org.labkey.api.pipeline.cmd.RequiredInLine">
                    <property name="value" value="."/>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="dummy2aNlpEngineCommand" class="org.labkey.api.pipeline.cmd.CommandTaskFactorySettings">
        <constructor-arg value="dummy2aNlpEngine"/>
        <property name="statusName" value="RUN NLP ENGINE"/>
        <property name="inputPaths">
            <map>
                <entry key="sourceDocs">
                    <bean class="org.labkey.api.pipeline.cmd.TaskPath">
                        <constructor-arg ref="nlpTsvFileType"/>
                    </bean>
                </entry>
            </map>
        </property>
        <property name="outputPaths">
            <map>
                <entry key="output">
                    <bean class="org.labkey.api.pipeline.cmd.TaskPath">
                        <constructor-arg ref="nlpJsonFileType"/>
                    </bean>
                </entry>
            </map>
        </property>
        <property name="converters">
            <list>
                <bean class="org.labkey.api.pipeline.cmd.ExeToCommandArgs">
                    <property name="exePath" value="mv"/>
                </bean>
                <bean class="org.labkey.api.pipeline.cmd.RequiredInLine">
                    <property name="value" value="../../../uiTest2a.nlp.json"/>
                </bean>
                <bean class="org.labkey.api.pipeline.cmd.RequiredInLine">
                    <property name="value" value="."/>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="dummy2bNlpEngineCommand" class="org.labkey.api.pipeline.cmd.CommandTaskFactorySettings">
        <constructor-arg value="dummy2bNlpEngine"/>
        <property name="statusName" value="RUN NLP ENGINE"/>
        <property name="inputPaths">
            <map>
                <entry key="sourceDocs">
                    <bean class="org.labkey.api.pipeline.cmd.TaskPath">
                        <constructor-arg ref="nlpTsvFileType"/>
                    </bean>
                </entry>
            </map>
        </property>
        <property name="outputPaths">
            <map>
                <entry key="output">
                    <bean class="org.labkey.api.pipeline.cmd.TaskPath">
                        <constructor-arg ref="nlpJsonFileType"/>
                    </bean>
                </entry>
            </map>
        </property>
        <property name="converters">
            <list>
                <bean class="org.labkey.api.pipeline.cmd.ExeToCommandArgs">
                    <property name="exePath" value="mv"/>
                </bean>
                <bean class="org.labkey.api.pipeline.cmd.RequiredInLine">
                    <property name="value" value="../../../uiTest2b.nlp.json"/>
                </bean>
                <bean class="org.labkey.api.pipeline.cmd.RequiredInLine">
                    <property name="value" value="."/>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="dummyNlpEngineCommandNoResults" class="org.labkey.api.pipeline.cmd.CommandTaskFactorySettings">
        <constructor-arg value="dummyNlpEngineNoResults"/>
        <property name="statusName" value="RUN NLP ENGINE"/>
        <property name="inputPaths">
            <map>
                <entry key="sourceDocs">
                    <bean class="org.labkey.api.pipeline.cmd.TaskPath">
                        <constructor-arg ref="nlpTsvFileType"/>
                    </bean>
                </entry>
            </map>
        </property>
        <property name="outputPaths">
            <map>
                <entry key="output">
                    <bean class="org.labkey.api.pipeline.cmd.TaskPath">
                        <constructor-arg ref="nlpJsonFileType"/>
                    </bean>
                </entry>
            </map>
        </property>
        <property name="converters">
            <list>
                <bean class="org.labkey.api.pipeline.cmd.ExeToCommandArgs">
                    <property name="exePath" value="mv"/>
                </bean>
                <bean class="org.labkey.api.pipeline.cmd.RequiredInLine">
                    <property name="value" value="../../../uiTest_noResults.nlp.json"/>
                </bean>
                <bean class="org.labkey.api.pipeline.cmd.RequiredInLine">
                    <property name="value" value="."/>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="dummyNlpEngineCommandCytogenetics" class="org.labkey.api.pipeline.cmd.CommandTaskFactorySettings">
        <constructor-arg value="dummyNlpEngineCytogentics"/>
        <property name="statusName" value="RUN NLP ENGINE"/>
        <property name="inputPaths">
            <map>
                <entry key="sourceDocs">
                    <bean class="org.labkey.api.pipeline.cmd.TaskPath">
                        <constructor-arg ref="nlpTsvFileType"/>
                    </bean>
                </entry>
            </map>
        </property>
        <property name="outputPaths">
            <map>
                <entry key="output">
                    <bean class="org.labkey.api.pipeline.cmd.TaskPath">
                        <constructor-arg ref="nlpJsonFileType"/>
                    </bean>
                </entry>
            </map>
        </property>
        <property name="converters">
            <list>
                <bean class="org.labkey.api.pipeline.cmd.ExeToCommandArgs">
                    <property name="exePath" value="mv"/>
                </bean>
                <bean class="org.labkey.api.pipeline.cmd.RequiredInLine">
                    <property name="value" value="../../../cytogenetics1.nlp.json"/>
                </bean>
                <bean class="org.labkey.api.pipeline.cmd.RequiredInLine">
                    <property name="value" value="."/>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="nlpTsvFileType" class="org.labkey.api.util.FileType">
        <constructor-arg value=".nlp.tsv"/>
    </bean>

    <bean id="nlpJsonFileType" class="org.labkey.api.util.FileType">
        <constructor-arg value=".nlp.json"/>
    </bean>


</beans>
